<<<<<<< Updated upstream
setwd("~/Documents/R_resources/codingSupportGroup/creatingFunctions")
source('~/Documents/R_resources/codingSupportGroup/creatingFunctions/function_towerSubplotLists.R')
randomSubplots("BART")
randomSubplots("CPER")
test = read.csv("input_shannonFunction.csv", header=T)
setwd("~/Documents/R_resources/codingSupportGroup/creatingFunctions")
test = read.csv("input_shannonFunction.csv", header=T)
View(test)
inputFileName = "input_shannonFunction.csv"
data = read.csv(inputFileName, header=T)
col.names(data)
names(data)
namesk(data)[1]
names(data)[1]
?row.names
?col.names
?cnames
rownames(data) = data[,1]
View(data)
head(data)
data = read.csv(inputFileName, header=T, row.names=1)
head(data)
data[1,1]
nrow(data)
ncol(data)
ls()
ls()
getwd()
setwd("~/Documents/R_resources/codingSupportGroup/creatingFunctions")
data = read.csv(inputFileName, header=T, row.names=1)
rm(test)
View(data)
head(data)
shannon = data.frame(matrix(data=NA, nrow=nrow(data), ncol=2))
cnames = c("plotID","Hprime")
colnames(shannon) = cnames
View(shannon)
rownames(data)
shannon$plotID = rownames(data)
View(shannon)
write.csv(shannon, "shannonOutput.csv")
write.csv(shannon, "shannonOutput.csv", row.names=FALSE)
H = 0
shannon$Hprime[1] = H
View(shannon)
source('~/Documents/R_resources/codingSupportGroup/creatingFunctions/function_shannonDiversity.R')
source('~/Documents/R_resources/codingSupportGroup/creatingFunctions/function_shannonDiversity.R')
getwd()
shannon("input_shannonFunction.csv")
test = read.csv("shannonOutput.csv", header=T)
View(test)
H
source('~/Documents/R_resources/codingSupportGroup/creatingFunctions/function_sampleNumCalculation.R')
sampleNum(0.2, 2)
sampleNum(0.5, 2)
sampleNum(0.5, 2, 20)
getwd()
rm(test)
source('~/Documents/R_resources/codingSupportGroup/creatingFunctions/function_degreeRadianConversion.R')
rad(90)
temp = rad(90)
temp
source('~/Documents/R_resources/codingSupportGroup/creatingFunctions/function_degreeRadianConversion.R')
rad(180)
source('~/Documents/R_resources/codingSupportGroup/creatingFunctions/function_degreeRadianConversion.R')
print("I rule!")
rad = function(degrees) {
radians = (degrees*pi)/180
return(radians)
print("I rule!")
}
rad(90)
source('~/Documents/R_resources/codingSupportGroup/creatingFunctions/function_degreeRadianConversion.R')
rad(90)
source('~/Documents/R_resources/codingSupportGroup/creatingFunctions/function_degreeRadianConversion.R')
temp = rad(90)
temp = 360
rad(temp)
temp = c(1:360)
rad(temp)
temp = read.csv("input_shannonFunction.csv", header=T, row.names=TRUE)
setwd("~/Documents/R_resources/codingSupportGroup/creatingFunctions")
temp = read.csv("input_shannonFunction.csv", header=T, row.names=TRUE)
temp = read.csv("input_shannonFunction.csv", header=T, row.names=1)
View(temp)
setwd("~/Documents/R_resources/codingSupportGroup/creatingFunctions")
source('~/Documents/R_resources/codingSupportGroup/creatingFunctions/function_shannonDiversity.R')
rm(list=ls())
source('~/Documents/R_resources/codingSupportGroup/creatingFunctions/function_shannonDiversity.R')
source('~/Documents/R_resources/codingSupportGroup/creatingFunctions/function_shannonDiversity.R')
shannon("input_shannonFunction.csv")
temp = read.csv("shannonOutput.csv", header=T)
View(temp)
View(temp)
i=1
j=1
for (j in 1:ncol(data)){
if (data[i,j] > 0){
H[j] = ((data[i,j])/Tot.obs)*log((data[i,j])/Tot.obs)
} else {H[j] = 0}
# End 'for loop for columns within row
}
data = read.csv("input_shannonFunction.csv", header=T)
View(data)
source('~/Documents/R_resources/codingSupportGroup/creatingFunctions/function_shannonDiversity.R')
source('~/Documents/R_resources/codingSupportGroup/creatingFunctions/function_shannonDiversity.R')
source('~/Documents/R_resources/codingSupportGroup/creatingFunctions/function_shannonDiversity.R')
shannon("input_shannonFunction.csv")
temp = read.csv("shannonOutput.csv", header=T)
View(temp)
getwd()
data
ncol(data[1,]>0)
ncol(data[1,])
data = read.csv("input_shannonFunction.csv", header=T, row.names=1)
ncol(data[1,])
ncol(data[1,]>0)
View(data)
ncol(data[data[1]>0])
ncol(data[data[1]>0],)
ncol(data[data[1,]>0,])
data[1,>0]
ncol(data[1,]>0)
data[1,]>0
length(data[1,]>0)
which(data[1,]>0)
length(which(data[1,]>0))
=======
write.csv(cbind(xy.rando.subplots[,c(3,4)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot23.csv", sep="") )
# file for coords within subplot 39
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(7,8)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot39.csv", sep="") )
# file for coords within subplot 41
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(5,6)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot41.csv", sep="") )
### C. Randomly select subplots to sample for required number of bouts
## ---> first with set seed
rando.bout.rows <- matrix(NA,tot.bouts, 3)
char2seed(1, set=TRUE); for(i in 1:tot.bouts) {
rando.bout.rows[i,] <- sample(c(21,23,39,41), size=3, replace=FALSE)
}
colnames(rando.bout.rows) <- c("Subplot", "Subplot", "Subplot")
write.csv(rando.bout.rows, paste(plotID[y], "_subplots.csv", sep=""),
row.names=FALSE)
}
domain <- "D07"
siteCode <- "GRSM"
module <- "bgc"
plotID <- subplotList(siteCode, module)   # assign plotIDs to object
plotNum <- substring(plotID,6,8)
plotNum <- as.integer(plotNum)
setwd(paste("/Users/lstanish/Git_Files/neonPlantSampling/soils_bgcAndMicrobes/",
domain, "/", siteCode, sep="") )
site_coords <- matrix(data=NA, nrow=tot.bouts, ncol=length(plotNum))
colnames(site_coords) <- plotID
for (y in 1:length(plotID)) {
## A. Generate random xy row IDs for each subplot. Char2seed allows you to set a starting value for randomization
#  so that numbers are repeatable
xy.subplot.rows <- matrix(NA,tot.row,length(subplot) )
char2seed(plotNum[y], set=TRUE); for(i in 1:length(subplot) ) {
xy.subplot.rows[,i] <- sample(1:nrow(subplot.coords), size=as.integer(tot.row),
replace=FALSE)
}
### B. Generate for loop to pull out random XYs from all subplots using randomly
### selected row IDs
xy.rando.subplots <- data.frame(matrix(NA,tot.row,length(subplot)*2) )
colnames(xy.rando.subplots) <- c("21x","21y","23x","23y","41x","41y","39x","39y")
for(i in 1:tot.row) {
tmp <- c(rep(xy.subplot.rows[i,1], 2),rep(xy.subplot.rows[i,2], 2),rep(xy.subplot.rows[i,3], 2),
rep(xy.subplot.rows[i,4], 2) )
#print(tmp)
for(j in 1:length(tmp)) {
xy.rando.subplots[i,j] <- subplot.coords[tmp[j],j]
}
}
# file for coords within subplot 21
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(1,2)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot21.csv", sep="") )
# file for coords within subplot 23
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(3,4)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot23.csv", sep="") )
# file for coords within subplot 39
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(7,8)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot39.csv", sep="") )
# file for coords within subplot 41
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(5,6)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot41.csv", sep="") )
### C. Randomly select subplots to sample for required number of bouts
## ---> first with set seed
rando.bout.rows <- matrix(NA,tot.bouts, 3)
char2seed(1, set=TRUE); for(i in 1:tot.bouts) {
rando.bout.rows[i,] <- sample(c(21,23,39,41), size=3, replace=FALSE)
}
colnames(rando.bout.rows) <- c("Subplot", "Subplot", "Subplot")
write.csv(rando.bout.rows, paste(plotID[y], "_subplots.csv", sep=""),
row.names=FALSE)
}
domain <- "D03"
siteCode <- "JERC"
module <- "bgc"
plotID <- subplotList(siteCode, module)   # assign plotIDs to object
plotNum <- substring(plotID,6,8)
plotNum <- as.integer(plotNum)
setwd(paste("/Users/lstanish/Git_Files/neonPlantSampling/soils_bgcAndMicrobes/",
domain, "/", siteCode, sep="") )
site_coords <- matrix(data=NA, nrow=tot.bouts, ncol=length(plotNum))
colnames(site_coords) <- plotID
for (y in 1:length(plotID)) {
## A. Generate random xy row IDs for each subplot. Char2seed allows you to set a starting value for randomization
#  so that numbers are repeatable
xy.subplot.rows <- matrix(NA,tot.row,length(subplot) )
char2seed(plotNum[y], set=TRUE); for(i in 1:length(subplot) ) {
xy.subplot.rows[,i] <- sample(1:nrow(subplot.coords), size=as.integer(tot.row),
replace=FALSE)
}
### B. Generate for loop to pull out random XYs from all subplots using randomly
### selected row IDs
xy.rando.subplots <- data.frame(matrix(NA,tot.row,length(subplot)*2) )
colnames(xy.rando.subplots) <- c("21x","21y","23x","23y","41x","41y","39x","39y")
for(i in 1:tot.row) {
tmp <- c(rep(xy.subplot.rows[i,1], 2),rep(xy.subplot.rows[i,2], 2),rep(xy.subplot.rows[i,3], 2),
rep(xy.subplot.rows[i,4], 2) )
#print(tmp)
for(j in 1:length(tmp)) {
xy.rando.subplots[i,j] <- subplot.coords[tmp[j],j]
}
}
# file for coords within subplot 21
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(1,2)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot21.csv", sep="") )
# file for coords within subplot 23
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(3,4)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot23.csv", sep="") )
# file for coords within subplot 39
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(7,8)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot39.csv", sep="") )
# file for coords within subplot 41
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(5,6)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot41.csv", sep="") )
### C. Randomly select subplots to sample for required number of bouts
## ---> first with set seed
rando.bout.rows <- matrix(NA,tot.bouts, 3)
char2seed(1, set=TRUE); for(i in 1:tot.bouts) {
rando.bout.rows[i,] <- sample(c(21,23,39,41), size=3, replace=FALSE)
}
colnames(rando.bout.rows) <- c("Subplot", "Subplot", "Subplot")
write.csv(rando.bout.rows, paste(plotID[y], "_subplots.csv", sep=""),
row.names=FALSE)
}
domain <- "D11"
siteCode <- "OAES"
module <- "bgc"
plotID <- subplotList(siteCode, module)   # assign plotIDs to object
plotNum <- substring(plotID,6,8)
plotNum <- as.integer(plotNum)
setwd(paste("/Users/lstanish/Git_Files/neonPlantSampling/soils_bgcAndMicrobes/",
domain, "/", siteCode, sep="") )
site_coords <- matrix(data=NA, nrow=tot.bouts, ncol=length(plotNum))
colnames(site_coords) <- plotID
for (y in 1:length(plotID)) {
## A. Generate random xy row IDs for each subplot. Char2seed allows you to set a starting value for randomization
#  so that numbers are repeatable
xy.subplot.rows <- matrix(NA,tot.row,length(subplot) )
char2seed(plotNum[y], set=TRUE); for(i in 1:length(subplot) ) {
xy.subplot.rows[,i] <- sample(1:nrow(subplot.coords), size=as.integer(tot.row),
replace=FALSE)
}
### B. Generate for loop to pull out random XYs from all subplots using randomly
### selected row IDs
xy.rando.subplots <- data.frame(matrix(NA,tot.row,length(subplot)*2) )
colnames(xy.rando.subplots) <- c("21x","21y","23x","23y","41x","41y","39x","39y")
for(i in 1:tot.row) {
tmp <- c(rep(xy.subplot.rows[i,1], 2),rep(xy.subplot.rows[i,2], 2),rep(xy.subplot.rows[i,3], 2),
rep(xy.subplot.rows[i,4], 2) )
#print(tmp)
for(j in 1:length(tmp)) {
xy.rando.subplots[i,j] <- subplot.coords[tmp[j],j]
}
}
# file for coords within subplot 21
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(1,2)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot21.csv", sep="") )
# file for coords within subplot 23
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(3,4)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot23.csv", sep="") )
# file for coords within subplot 39
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(7,8)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot39.csv", sep="") )
# file for coords within subplot 41
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(5,6)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot41.csv", sep="") )
### C. Randomly select subplots to sample for required number of bouts
## ---> first with set seed
rando.bout.rows <- matrix(NA,tot.bouts, 3)
char2seed(1, set=TRUE); for(i in 1:tot.bouts) {
rando.bout.rows[i,] <- sample(c(21,23,39,41), size=3, replace=FALSE)
}
colnames(rando.bout.rows) <- c("Subplot", "Subplot", "Subplot")
write.csv(rando.bout.rows, paste(plotID[y], "_subplots.csv", sep=""),
row.names=FALSE)
}
domain <- "D07"
siteCode <- "ORNL"
module <- "bgc"
plotID <- subplotList(siteCode, module)   # assign plotIDs to object
plotNum <- substring(plotID,6,8)
plotNum <- as.integer(plotNum)
setwd(paste("/Users/lstanish/Git_Files/neonPlantSampling/soils_bgcAndMicrobes/",
domain, "/", siteCode, sep="") )
site_coords <- matrix(data=NA, nrow=tot.bouts, ncol=length(plotNum))
colnames(site_coords) <- plotID
for (y in 1:length(plotID)) {
## A. Generate random xy row IDs for each subplot. Char2seed allows you to set a starting value for randomization
#  so that numbers are repeatable
xy.subplot.rows <- matrix(NA,tot.row,length(subplot) )
char2seed(plotNum[y], set=TRUE); for(i in 1:length(subplot) ) {
xy.subplot.rows[,i] <- sample(1:nrow(subplot.coords), size=as.integer(tot.row),
replace=FALSE)
}
### B. Generate for loop to pull out random XYs from all subplots using randomly
### selected row IDs
xy.rando.subplots <- data.frame(matrix(NA,tot.row,length(subplot)*2) )
colnames(xy.rando.subplots) <- c("21x","21y","23x","23y","41x","41y","39x","39y")
for(i in 1:tot.row) {
tmp <- c(rep(xy.subplot.rows[i,1], 2),rep(xy.subplot.rows[i,2], 2),rep(xy.subplot.rows[i,3], 2),
rep(xy.subplot.rows[i,4], 2) )
#print(tmp)
for(j in 1:length(tmp)) {
xy.rando.subplots[i,j] <- subplot.coords[tmp[j],j]
}
}
# file for coords within subplot 21
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(1,2)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot21.csv", sep="") )
# file for coords within subplot 23
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(3,4)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot23.csv", sep="") )
# file for coords within subplot 39
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(7,8)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot39.csv", sep="") )
# file for coords within subplot 41
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(5,6)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot41.csv", sep="") )
### C. Randomly select subplots to sample for required number of bouts
## ---> first with set seed
rando.bout.rows <- matrix(NA,tot.bouts, 3)
char2seed(1, set=TRUE); for(i in 1:tot.bouts) {
rando.bout.rows[i,] <- sample(c(21,23,39,41), size=3, replace=FALSE)
}
colnames(rando.bout.rows) <- c("Subplot", "Subplot", "Subplot")
write.csv(rando.bout.rows, paste(plotID[y], "_subplots.csv", sep=""),
row.names=FALSE)
}
domain <- "D02"
siteCode <- "SERC"
module <- "bgc"
plotID <- subplotList(siteCode, module)   # assign plotIDs to object
plotNum <- substring(plotID,6,8)
plotNum <- as.integer(plotNum)
setwd(paste("/Users/lstanish/Git_Files/neonPlantSampling/soils_bgcAndMicrobes/",
domain, "/", siteCode, sep="") )
site_coords <- matrix(data=NA, nrow=tot.bouts, ncol=length(plotNum))
colnames(site_coords) <- plotID
for (y in 1:length(plotID)) {
## A. Generate random xy row IDs for each subplot. Char2seed allows you to set a starting value for randomization
#  so that numbers are repeatable
xy.subplot.rows <- matrix(NA,tot.row,length(subplot) )
char2seed(plotNum[y], set=TRUE); for(i in 1:length(subplot) ) {
xy.subplot.rows[,i] <- sample(1:nrow(subplot.coords), size=as.integer(tot.row),
replace=FALSE)
}
### B. Generate for loop to pull out random XYs from all subplots using randomly
### selected row IDs
xy.rando.subplots <- data.frame(matrix(NA,tot.row,length(subplot)*2) )
colnames(xy.rando.subplots) <- c("21x","21y","23x","23y","41x","41y","39x","39y")
for(i in 1:tot.row) {
tmp <- c(rep(xy.subplot.rows[i,1], 2),rep(xy.subplot.rows[i,2], 2),rep(xy.subplot.rows[i,3], 2),
rep(xy.subplot.rows[i,4], 2) )
#print(tmp)
for(j in 1:length(tmp)) {
xy.rando.subplots[i,j] <- subplot.coords[tmp[j],j]
}
}
# file for coords within subplot 21
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(1,2)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot21.csv", sep="") )
# file for coords within subplot 23
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(3,4)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot23.csv", sep="") )
# file for coords within subplot 39
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(7,8)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot39.csv", sep="") )
# file for coords within subplot 41
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(5,6)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot41.csv", sep="") )
### C. Randomly select subplots to sample for required number of bouts
## ---> first with set seed
rando.bout.rows <- matrix(NA,tot.bouts, 3)
char2seed(1, set=TRUE); for(i in 1:tot.bouts) {
rando.bout.rows[i,] <- sample(c(21,23,39,41), size=3, replace=FALSE)
}
colnames(rando.bout.rows) <- c("Subplot", "Subplot", "Subplot")
write.csv(rando.bout.rows, paste(plotID[y], "_subplots.csv", sep=""),
row.names=FALSE)
}
domain <- "D14"
siteCode <- "SRER"
module <- "bgc"
plotID <- subplotList(siteCode, module)   # assign plotIDs to object
plotNum <- substring(plotID,6,8)
plotNum <- as.integer(plotNum)
setwd(paste("/Users/lstanish/Git_Files/neonPlantSampling/soils_bgcAndMicrobes/",
domain, "/", siteCode, sep="") )
site_coords <- matrix(data=NA, nrow=tot.bouts, ncol=length(plotNum))
colnames(site_coords) <- plotID
for (y in 1:length(plotID)) {
## A. Generate random xy row IDs for each subplot. Char2seed allows you to set a starting value for randomization
#  so that numbers are repeatable
xy.subplot.rows <- matrix(NA,tot.row,length(subplot) )
char2seed(plotNum[y], set=TRUE); for(i in 1:length(subplot) ) {
xy.subplot.rows[,i] <- sample(1:nrow(subplot.coords), size=as.integer(tot.row),
replace=FALSE)
}
### B. Generate for loop to pull out random XYs from all subplots using randomly
### selected row IDs
xy.rando.subplots <- data.frame(matrix(NA,tot.row,length(subplot)*2) )
colnames(xy.rando.subplots) <- c("21x","21y","23x","23y","41x","41y","39x","39y")
for(i in 1:tot.row) {
tmp <- c(rep(xy.subplot.rows[i,1], 2),rep(xy.subplot.rows[i,2], 2),rep(xy.subplot.rows[i,3], 2),
rep(xy.subplot.rows[i,4], 2) )
#print(tmp)
for(j in 1:length(tmp)) {
xy.rando.subplots[i,j] <- subplot.coords[tmp[j],j]
}
}
# file for coords within subplot 21
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(1,2)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot21.csv", sep="") )
# file for coords within subplot 23
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(3,4)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot23.csv", sep="") )
# file for coords within subplot 39
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(7,8)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot39.csv", sep="") )
# file for coords within subplot 41
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(5,6)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot41.csv", sep="") )
### C. Randomly select subplots to sample for required number of bouts
## ---> first with set seed
rando.bout.rows <- matrix(NA,tot.bouts, 3)
char2seed(1, set=TRUE); for(i in 1:tot.bouts) {
rando.bout.rows[i,] <- sample(c(21,23,39,41), size=3, replace=FALSE)
}
colnames(rando.bout.rows) <- c("Subplot", "Subplot", "Subplot")
write.csv(rando.bout.rows, paste(plotID[y], "_subplots.csv", sep=""),
row.names=FALSE)
}
domain <- "D08"
siteCode <- "TALL"
module <- "bgc"
plotID <- subplotList(siteCode, module)   # assign plotIDs to object
plotNum <- substring(plotID,6,8)
plotNum <- as.integer(plotNum)
setwd(paste("/Users/lstanish/Git_Files/neonPlantSampling/soils_bgcAndMicrobes/",
domain, "/", siteCode, sep="") )
site_coords <- matrix(data=NA, nrow=tot.bouts, ncol=length(plotNum))
colnames(site_coords) <- plotID
for (y in 1:length(plotID)) {
## A. Generate random xy row IDs for each subplot. Char2seed allows you to set a starting value for randomization
#  so that numbers are repeatable
xy.subplot.rows <- matrix(NA,tot.row,length(subplot) )
char2seed(plotNum[y], set=TRUE); for(i in 1:length(subplot) ) {
xy.subplot.rows[,i] <- sample(1:nrow(subplot.coords), size=as.integer(tot.row),
replace=FALSE)
}
### B. Generate for loop to pull out random XYs from all subplots using randomly
### selected row IDs
xy.rando.subplots <- data.frame(matrix(NA,tot.row,length(subplot)*2) )
colnames(xy.rando.subplots) <- c("21x","21y","23x","23y","41x","41y","39x","39y")
for(i in 1:tot.row) {
tmp <- c(rep(xy.subplot.rows[i,1], 2),rep(xy.subplot.rows[i,2], 2),rep(xy.subplot.rows[i,3], 2),
rep(xy.subplot.rows[i,4], 2) )
#print(tmp)
for(j in 1:length(tmp)) {
xy.rando.subplots[i,j] <- subplot.coords[tmp[j],j]
}
}
# file for coords within subplot 21
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(1,2)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot21.csv", sep="") )
# file for coords within subplot 23
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(3,4)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot23.csv", sep="") )
# file for coords within subplot 39
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(7,8)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot39.csv", sep="") )
# file for coords within subplot 41
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(5,6)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot41.csv", sep="") )
### C. Randomly select subplots to sample for required number of bouts
## ---> first with set seed
rando.bout.rows <- matrix(NA,tot.bouts, 3)
char2seed(1, set=TRUE); for(i in 1:tot.bouts) {
rando.bout.rows[i,] <- sample(c(21,23,39,41), size=3, replace=FALSE)
}
colnames(rando.bout.rows) <- c("Subplot", "Subplot", "Subplot")
write.csv(rando.bout.rows, paste(plotID[y], "_subplots.csv", sep=""),
row.names=FALSE)
}
domain <- "D04"
siteCode <- "GUAN"
module <- "bgc"
plotID <- subplotList(siteCode, module)   # assign plotIDs to object
plotNum <- substring(plotID,6,8)
plotNum <- as.integer(plotNum)
dir.create(paste("/Users/lstanish/Git_Files/neonPlantSampling/soils_bgcAndMicrobes/",
domain, "/", siteCode, sep="") )
setwd(paste("/Users/lstanish/Git_Files/neonPlantSampling/soils_bgcAndMicrobes/",
domain, "/", siteCode, sep="") )
site_coords <- matrix(data=NA, nrow=tot.bouts, ncol=length(plotNum))
colnames(site_coords) <- plotID
for (y in 1:length(plotID)) {
## A. Generate random xy row IDs for each subplot. Char2seed allows you to set a starting value for randomization
#  so that numbers are repeatable
xy.subplot.rows <- matrix(NA,tot.row,length(subplot) )
char2seed(plotNum[y], set=TRUE); for(i in 1:length(subplot) ) {
xy.subplot.rows[,i] <- sample(1:nrow(subplot.coords), size=as.integer(tot.row),
replace=FALSE)
}
### B. Generate for loop to pull out random XYs from all subplots using randomly
### selected row IDs
xy.rando.subplots <- data.frame(matrix(NA,tot.row,length(subplot)*2) )
colnames(xy.rando.subplots) <- c("21x","21y","23x","23y","41x","41y","39x","39y")
for(i in 1:tot.row) {
tmp <- c(rep(xy.subplot.rows[i,1], 2),rep(xy.subplot.rows[i,2], 2),rep(xy.subplot.rows[i,3], 2),
rep(xy.subplot.rows[i,4], 2) )
#print(tmp)
for(j in 1:length(tmp)) {
xy.rando.subplots[i,j] <- subplot.coords[tmp[j],j]
}
}
# file for coords within subplot 21
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(1,2)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot21.csv", sep="") )
# file for coords within subplot 23
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(3,4)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot23.csv", sep="") )
# file for coords within subplot 39
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(7,8)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot39.csv", sep="") )
# file for coords within subplot 41
sp.tmp <- matrix(data="", nrow=nrow(xy.rando.subplots), ncol=2,
dimnames=list(NULL,c("Status", "Date")))
write.csv(cbind(xy.rando.subplots[,c(5,6)], sp.tmp) , paste(plotID[y],
"_sls_coords_subplot41.csv", sep="") )
### C. Randomly select subplots to sample for required number of bouts
## ---> first with set seed
rando.bout.rows <- matrix(NA,tot.bouts, 3)
char2seed(1, set=TRUE); for(i in 1:tot.bouts) {
rando.bout.rows[i,] <- sample(c(21,23,39,41), size=3, replace=FALSE)
}
colnames(rando.bout.rows) <- c("Subplot", "Subplot", "Subplot")
write.csv(rando.bout.rows, paste(plotID[y], "_subplots.csv", sep=""),
row.names=FALSE)
}
title: "README"
output: html_document
---
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
# SoilsCharacterization
### This repository is for communicating and sharing documents for the Soil Initial Characterization Contract
##
>>>>>>> Stashed changes
